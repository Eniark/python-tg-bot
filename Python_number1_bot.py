import telebot
import config
import mysql.connector
from telebot import types
import keyboards
import time

bot=telebot.TeleBot(config.TOKEN)


students={"—é—Ä–∞–Ω—É—Å":"–Æ—Ä–∞ –ì—É–ª—ñ–≤–∞—Ç–∏–π", "Yurii":"–Æ—Ä—ñ–π –ö–æ—à–∫—ñ–Ω"}
queue=[]
hours=0
minutes=0

# def add_record(msg):
#     if msg.from_user.first_name in queue:
#         bot.send_message(msg.chat.id, "–¢–∏ –≤–∂–µ —É —á–µ—Ä–∑—ñ, –¥–≤—ñ—á—ñ –¥–æ–¥–∞–≤–∞—Ç–∏—Å—å —É —á–µ—Ä–≥—É –Ω–µ –º–æ–∂–Ω–∞.", parse_mode="html")
#         return
#     queue.append(msg.from_user.first_name)
#     bot.send_message(msg.chat.id, "–¢–µ–±–µ —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ!", parse_mode="html", reply_markup=keyboards.WASHING_KEYBOARD)
#     print(queue)
#     print("Added new user")
#
# def show_records(msg):
#     formatted_record=""
#     print(result)
#     if len(queue)==0:
#         bot.send_message(msg.chat.id, "–í —á–µ—Ä–∑—ñ –Ω—ñ–∫–æ–≥–æ —â–µ –Ω–µ–º–∞—î...")
#     else:
#         for record in queue:
#             formatted_record+=str(record[0])+". "+record[1]+" --> "+record[2]+"\n"
#         bot.send_message(msg.chat.id, formatted_record)

@bot.message_handler(func=lambda x:x.text=="–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è —É —á–µ—Ä–≥—É")
def add_to_queue(msg):
    # if msg.from_user.first_name in queue:
    #     bot.send_message(msg.chat.id, "–¢–∏ –≤–∂–µ —É —á–µ—Ä–∑—ñ, –¥–≤—ñ—á—ñ –¥–æ–¥–∞–≤–∞—Ç–∏—Å—å —É —á–µ—Ä–≥—É –Ω–µ –º–æ–∂–Ω–∞.", parse_mode="html")
    #     return
    queue.append([msg.from_user.first_name, "–í –æ—á—ñ–∫—É–≤–∞–Ω–Ω—ñ"])
    bot.send_message(msg.chat.id, "–¢–µ–±–µ —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ!", parse_mode="html", reply_markup=keyboards.WASHING_KEYBOARD)
    print(queue)
    print("Added new user")

@bot.message_handler(func=lambda x:x.text=="–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —á–µ—Ä–≥—É")
def peek_in_the_queue(msg):
    pos=1
    formatted_record = ""
    if len(queue)==0:
        bot.send_message(msg.chat.id, "–í —á–µ—Ä–∑—ñ –Ω—ñ–∫–æ–≥–æ —â–µ –Ω–µ–º–∞—î...")
    else:
        for record in queue:
            print(record)
            formatted_record+=str(pos)+". "+record[0]+" --> "+str(record[1])+"\n"
            pos+=1
        bot.send_message(msg.chat.id, formatted_record)
    pos=1
@bot.message_handler(commands=["start"])
def welcome(msg):
    if msg.from_user.last_name==None:
        bot.send_message(msg.chat.id, "–í—ñ—Ç–∞–Ω–Ω—è {} üòÅ  \n–Ø - –ø–æ–ª–µ–≥—à–µ–Ω–Ω—è —Ç–≤–æ–≥–æ –∂–∏—Ç—Ç—è –≤ –£–ê–õ.\n"
                                      "–ó—ñ –º–Ω–æ—é —Ç–∏ –∑–º–æ–∂–µ—à —â–µ –∫—Ä–∞—â–µ —Ç–∞–π–º –º–µ–Ω–µ–¥–∂–∏—Ç–∏ —Å–≤–æ—ó –∑–∞–≤–¥–∞–Ω–Ω—è —ñ –±—É—Ç–∏ —â–µ –±—ñ–ª—å—à —Å–≤—ñ–¥–æ–º–∏–º —Å—Ç—É–¥–µ–Ω—Ç–æ–º.".format(
            msg.from_user.first_name.capitalize()),
                         parse_mode="html", reply_markup=keyboards.IN_QUEUE_KEYBOARD)
    else:
        bot.send_message(msg.chat.id, "–í—ñ—Ç–∞–Ω–Ω—è {} {} üòÅ \n–Ø - –ø–æ–ª–µ–≥—à–µ–Ω–Ω—è —Ç–≤–æ–≥–æ –∂–∏—Ç—Ç—è –≤ –£–ê–õ.\n"
                                      "–ó—ñ –º–Ω–æ—é —Ç–∏ –∑–º–æ–∂–µ—à —â–µ –∫—Ä–∞—â–µ —Ç–∞–π–º –º–µ–Ω–µ–¥–∂–∏—Ç–∏ —Å–≤–æ—ó –∑–∞–≤–¥–∞–Ω–Ω—è —ñ –±—É—Ç–∏ —â–µ –±—ñ–ª—å—à —Å–≤—ñ–¥–æ–º–∏–º —Å—Ç—É–¥–µ–Ω—Ç–æ–º.".format(msg.from_user.first_name.capitalize(), msg.from_user.last_name ),
                         parse_mode="html", reply_markup=keyboards.IN_QUEUE_KEYBOARD)
@bot.message_handler(func=lambda x:x.text == "–ü–æ–∫–∏–Ω—É—Ç–∏ —á–µ—Ä–≥—É")
def leave_queue(msg):
    print(queue)
    for i in queue:
        for j in i:
        # print("exec")
            if j==msg.from_user.first_name:
                queue.pop(queue.index(i))
                print("Succesfully popped the user")
                bot.send_message(msg.chat.id, "–¢–µ–±–µ —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ –∑ —á–µ—Ä–≥–∏!", parse_mode="html", reply_markup=keyboards.IN_QUEUE_KEYBOARD)
                return
@bot.message_handler(func=lambda x:x.text == "–ó–∞–∫–ª–∞—Å—Ç–∏ –ø—Ä–∞–Ω–Ω—è")
def start_washing(msg):
    bot.send_message(msg.chat.id, "–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å —Ä–µ–∂–∏–º –ø—Ä–∞–Ω–Ω—è:", parse_mode="html", reply_markup = keyboards.REGIME_OF_WASHING_KEYBOARD)

@bot.message_handler(func=lambda x:x.text=="1 –≥–æ–¥–∏–Ω–∞")
def one_hour(msg):
    remove_keyboard=types.ReplyKeyboardRemove(selective=False)
    bot.send_message(msg.chat.id, "–í–∞—à —Ç–∞–π–º–µ—Ä –Ω–∞ 1 –≥–æ–¥–∏–Ω—É —É—Å–ø—ñ—à–Ω–æ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π!", parse_mode="html", reply_markup=keyboards.WAITING_KEYBOARD)
    time_to_wait = 0
    converted_washing_time=60
    for record in queue:
        if msg.from_user.first_name in record:
            record_index=queue.index(record)
            break

    while time_to_wait!=20:
        queue[record_index][1]= "–ú–∏—î—Ç—å—Å—è: –∑–∞–ª–∏—à–∏–ª–æ—Å—å {} —Ö–≤–∏–ª–∏–Ω".format(str(60 - time_to_wait))
        time_to_wait+=1
        time.sleep(1)
        print(time_to_wait)

    bot.send_message(msg.chat.id, "–ó–ê–ë–ï–†–ò –°–í–û–Ñ –ü–†–ê–ù–ù–Ø!", parse_mode="html",
                     reply_markup=keyboards.IN_QUEUE_KEYBOARD)
    time_to_wait=0
@bot.message_handler(func=lambda x:x.text=="2 –≥–æ–¥–∏–Ω–∏")
def two_hours(msg):
    hours=0
    minutes=0
    washing_time = 120
    time_to_wait=0
    bot.send_message(msg.chat.id, "–í–∞—à —Ç–∞–π–º–µ—Ä –Ω–∞ 2 –≥–æ–¥–∏–Ω–∏ —É—Å–ø—ñ—à–Ω–æ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π!", parse_mode="html", reply_markup=keyboards.WAITING_KEYBOARD)

    for record in queue:
        if msg.from_user.first_name in record:
            record_index=queue.index(record)
            break

    while washing_time>=60:
        washing_time-=60
        hours+=1
    minutes=washing_time
    while time_to_wait!=120:
        queue[record_index][1]="–ú–∏—î—Ç—å—Å—è: –∑–∞–ª–∏—à–∏–ª–æ—Å—å {} –≥–æ–¥–∏–Ω–∏ {} —Ö–≤–∏–ª–∏–Ω.".format(hours, minutes)

        time_to_wait+=1
        time.sleep(60)
    bot.send_message(msg.chat.id, "–ó–ê–ë–ï–†–ò –°–í–û–Ñ –ü–†–ê–ù–ù–Ø!", parse_mode="html", reply_markup=keyboards.IN_QUEUE_KEYBOARD)
    time_to_wait=0
@bot.message_handler(func=lambda x:x.text=="30 —Ö–≤–∏–ª–∏–Ω")
def thirty_mins(msg):
    hours=0
    minutes=0
    time_to_wait = 0
    bot.send_message(msg.chat.id, "–í–∞—à —Ç–∞–π–º–µ—Ä –Ω–∞ 30 —Ö–≤–∏–ª–∏–Ω —É—Å–ø—ñ—à–Ω–æ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π!", parse_mode="html", reply_markup=keyboards.WAITING_KEYBOARD)

    for record in queue:
        if msg.from_user.first_name in record:
            record_index=queue.index(record)
            break

    while time_to_wait!=30:
        queue[record_index][1]="–ú–∏—î—Ç—å—Å—è: –∑–∞–ª–∏—à–∏–ª–æ—Å—å {} —Ö–≤–∏–ª–∏–Ω".format(30 - time_to_wait)
        time_to_wait+=1
        time.sleep(60)
    time_to_wait=0
    bot.send_message(msg.chat.id, "–ó–ê–ë–ï–†–ò –°–í–û–Ñ –ü–†–ê–ù–ù–Ø!", parse_mode="html", reply_markup=keyboards.IN_QUEUE_KEYBOARD)

bot.polling(none_stop=True)
